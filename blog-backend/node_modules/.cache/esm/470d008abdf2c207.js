let Koa,Router,bodyParser,mongoose,api;_bdf‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_bdf‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_bdf‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_bdf‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_bdf‍.w("./api",[["default",["api"],function(v){api=v}]]);require('dotenv').config();







const {PORT, MONGO_URI} = process.env;

const app = new Koa();
const router = new Router();

mongoose.connect(MONGO_URI, {useNewUrlParser: true })
.then(() => {
console.log('Connect to MongoDB');
})
.catch(e => {
    _bdf‍.g.console.error(e);
});
// 라우터 설정 
router.use('/api', api.routes());

// 라우터 적용 전에 bodyparser
app.use(bodyParser());

// app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
    _bdf‍.g.console.log('Listening to port %d', port);
})